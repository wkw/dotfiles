[user]
	name = Wayne Walrath
	email = wayne@evolvingmedia.net
[alias]
    co = checkout
    lol = log --pretty=oneline --abbrev-commit --graph --decorate
    # log-one-line-short (only show 20 commits)
    lols = log --pretty=oneline --abbrev-commit --graph --decorate -n20
    l = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'
    # same as above, but no merges
    lnm = log --no-merges --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'
    lstat = log --stat -c --graph --decorate
    lp = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ad)%C(reset) %C(white)%s%C(reset) - %C(bold blue)<%an>%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
    s = status --short -b
        #ignore untracked files ('Status TRacked')
    str = status --untracked-files=no
    alias = config --get-regexp alias
    f = fetch
    #delete branch
    dlb = branch -d
    # force delete for unmerged branch
    fdlb = branch -d
    # Other useful aliases:
    unstage = reset HEAD
    staged = diff --cached
    unstaged = diff
    current-branch = !git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
    # Usage: git track origin/feature-123-login-form
    track = checkout -t
    # push a new branch to remote and track it.
    #usage: git pushtrack origin feature
    pushtrack = push -u

    # see: http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
    #       and https://github.com/durdn/cfg/blob/master/.gitconfig

    le = log --oneline --decorate
        #list showing changed files
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    ls1 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --graph
    ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    lc  = "!f() { git ll "$1"^.."$1"; }; f"
        #List with no colors to chain output
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"

    # http://stackoverflow.com/a/2363495/161625
    # shows files which have been hit with update-index --assume-unchanged
    ignored = !git ls-files -v | grep "^[[:lower:]]"

    ai = add --interactive
    amend = commit --amend

    #stash
    sl = stash list
    sa = stash apply
    ss = stash save

    cp = cherry-pick

    #assume aliases
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged
    #show assumed files
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    #unassume all the assumed files
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

    #merges
    ours = "!f() { git co --ours $@ && git add $@; }; f"
    theirs = "!f() { git co --theirs $@ && git add $@; }; f"

    #reset commands
    r = reset
    r1 = reset HEAD^
    r2 = reset HEAD^^
    rh = reset --hard
    rh1 = reset HEAD^ --hard
    rh2 = reset HEAD^^ --hard

	#misc
		# for alias.find, see: http://stackoverflow.com/a/16252013/161625
	find = "!git log --color -p -S "

[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = auto
[color "branch"]
	current = green bold
	local = green
	remote = red bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red
[core]
	excludesfile = /Users/wkw/.gitignore_global
    editor = subl -n -w
	#editor = bbedit -w
	precomposeunicode = false
#	editor = mate -w
[difftool "sourcetree"]
	cmd = /usr/local/bin/bbdiff --resume --reverse --wait \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/ThirdParty/Subversion-SCM-GIT/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
#[branch "master"]
#	remote = origin
#	merge = refs/heads/master
[push]
	default = upstream
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[commit]
	template = /Users/wkw/.stCommitMsg
